@use "sass:math";

// @import "./node_modules/spectre.css/src/variables";
@import "./node_modules/spectre.css/src/mixins";

@import "./scss/variables";
// src/scss/variables.scss
$control-padding-y: math.div($control-size - $line-height, 2) - $border-width !default;
$control-padding-y-sm: math.div($control-size-sm - $line-height, 2) - $border-width !default;
$control-padding-y-lg: math.div($control-size-lg - $line-height, 2) - $border-width !default;

@import "./scss/viewer-360.scss";
// src/scss/viewer-360.scss
@mixin viewer-slider-size($image-number: 36) {
    @for $s from 1 through ($image-number) {
        .viewer-slider[max="#{$image-number}"][value="#{$s}"] + .viewer-image {
            background-position-y: percentage(math.div((($s)-1) * 1, ($image-number)-1));
        }
    }
}

@import "./scss/avatar";
// src/scss/mixins/avatar
@mixin avatar-base($size: $unit-8) {
    font-size: math.div($size, 2);
    height: $size;
    width: $size;
}

@import "./scss/forms";
// src/scss/forms.scss
.form-checkbox,
.form-radio,
.form-switch {
    margin: math.div($control-size - $control-size-sm, 2) 0;
    padding: math.div($control-size-sm - $line-height, 2) $control-padding-x
        math.div($control-size-sm - $line-height, 2) ($control-icon-size + $control-padding-x);

    &.input-lg {
        margin: math.div($control-size-lg - $control-size-sm, 2) 0;
    }
}

.form-checkbox,
.form-radio {
    .form-icon {
        top: math.div($control-size-sm - $control-icon-size, 2);
    }
}

.form-switch {
    .form-icon {
        top: math.div($control-size-sm - $unit-4, 2) - $border-width;
    }
}

@import "./scss/layout";
// src/scss/layout.scss
.container {
    $grid-spacing: math.div($layout-spacing, $layout-spacing * 0 + 1) * $html-font-size;
}

@import "./scss/sliders";
// src/scss/sliders.scss
.slider {
    &::-webkit-slider-thumb {
        margin-top: math.div(-($unit-3 - $unit-h), 2);
    }
}

// src/scss/icons/icons-action.scss
$icon-border-width: $border-width-lg;
$icon-prefix: "icon";
@import "./scss/icons-action";
.icon-delete {
    &::after {
        top: math.div($icon-border-width, 2);
    }
}

// forms.scss reversed `&` ----------------------------------------
.has-success {
    .form-input-hint {
        color: $success-color;
    }
    .form-input,
    .form-select {
        background: lighten($success-color, 53%);
        border-color: $success-color;
        &:focus {
            @include control-shadow($success-color);
        }
    }
}
.is-success + {
    .form-input-hint {
        color: $success-color;
    }
}
.has-error {
    .form-input-hint {
        color: $error-color;
    }
    .form-input,
    .form-select {
        background: lighten($error-color, 53%);
        border-color: $error-color;
        &:focus {
            @include control-shadow($error-color);
        }
    }
    .form-checkbox,
    .form-radio,
    .form-switch {
        .form-icon {
            border-color: $error-color;
        }

        input {
            &:checked + .form-icon {
                background: $error-color;
                border-color: $error-color;
            }

            &:focus + .form-icon {
                @include control-shadow($error-color);
                border-color: $error-color;
            }
        }
    }
    .form-checkbox {
        input {
            &:indeterminate + .form-icon {
                background: $error-color;
                border-color: $error-color;
            }
        }
    }
}
.is-error + {
    .form-input-hint {
        color: $error-color;
    }
}

.form-input,
.form-select {
    &.is-success {
        background: lighten($success-color, 53%);
        border-color: $success-color;
        &:focus {
            @include control-shadow($success-color);
        }
    }
    &.is-error {
        background: lighten($error-color, 53%);
        border-color: $error-color;
        &:focus {
            @include control-shadow($error-color);
        }
    }
}

.form-checkbox,
.form-radio,
.form-switch {
    &.is-error {
        .form-icon {
            border-color: $error-color;
        }

        input {
            &:checked + .form-icon {
                background: $error-color;
                border-color: $error-color;
            }

            &:focus + .form-icon {
                @include control-shadow($error-color);
                border-color: $error-color;
            }
        }
    }
}

.form-checkbox {
    &.is-error {
        input {
            &:indeterminate + .form-icon {
                background: $error-color;
                border-color: $error-color;
            }
        }
    }
}
textarea.form-input {
    textarea.form-input,
    &.input-lg,
    &.input-sm {
        height: auto;
    }
}

// tables.scss reversed `&` -----------------------------
.table,
.table.table-striped {
    tbody {
        tr {
            &.active {
                background: $bg-color-dark;
            }
        }
    }
}
